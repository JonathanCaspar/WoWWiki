{"version":3,"sources":["pages/characters/Characters.js","api/BlizzardAPI.js","pages/mounts/MountsSlice.js","components/SearchBar/SearchBar.js","pages/mounts/MountsList.js","pages/mounts/MountViewer.js","pages/mounts/Mounts.js","pages/pets/Pets.js","components/Nav/Navigation.js","components/Footer/Footer.js","App.js","store.js","index.js","assets/favicon.svg"],"names":["Characters","props","state","value","handleCharacterSearch","bind","event","target","formatValue","length","substr","toUpperCase","toLowerCase","this","setState","t","className","onSubmit","type","onChange","Component","withTranslation","client_id","requestAuthToken","a","console","log","axios","post","auth","username","password","params","grant_type","getAuthToken","token","localStorage","getItem","token_expire_time","Math","floor","Date","now","then","result","data","access_token","new_expire_date","expires_in","setItem","error","client","endpoint","body","customConfig","headers","config","method","Authorization","validateStatus","status","JSON","stringify","Promise","reject","message","getMountIndex","region","namespace","locale","BLIZZARD_ENDPOINT","getMountById","mountid","fetchMounts","createAsyncThunk","response","mounts","fetchMountById","mountId","fetchMountAsset","mount","creature_displays","key","href","MountsSlice","createSlice","name","initialState","searchText","selectedMount","selectedMountAsset","selectedMountStatus","selectedMountError","reducers","newMountClicked","mountSearched","action","payload","extraReducers","pending","fulfilled","concat","rejected","assets","actions","SearchBar","onChangeCallback","useState","query","setQuery","e","MountsList","renderedList","dispatch","useDispatch","useTranslation","useSelector","filter","includes","useEffect","Spinner","animation","role","size","slice","sort","b","localeCompare","map","id","to","MountViewer","renderedMount","match","mountStatus","mountAsset","description","src","alt","Mounts","path","component","Pets","Navigation","lang","setLang","i18n","getNextLang","Navbar","bg","variant","expand","Brand","favicon","Toggle","aria-controls","Collapse","Nav","Button","onClick","newLang","changeLanguage","Footer","style","fontSize","App","exact","configureStore","reducer","mountsReducers","i18next","init","interpolation","escapeValue","lng","resources","en","common","common_en","fr","common_fr","ReactDOM","render","store","I18nextProvider","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.43be1f7d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { withTranslation } from 'react-i18next'\r\n//import './Characters.css'\r\n\r\nclass Characters extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = { value: '' }\r\n\t\tthis.handleCharacterSearch = this.handleCharacterSearch.bind(this)\r\n\t}\r\n\r\n\thandleCharacterSearch(event) {\r\n\t\tlet value = event.target.value\r\n\t\tlet formatValue =\r\n\t\t\tvalue.length >= 1\r\n\t\t\t\t? value.substr(0, 1).toUpperCase() +\r\n\t\t\t\t  value.substr(1, value.length).toLowerCase() // first letter to uppercase, rest of letters to lowercase\r\n\t\t\t\t: value\r\n\t\tthis.setState({ value: formatValue })\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { t } = this.props\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"Characters\">\r\n\t\t\t\t<h1>Work in progress - not working</h1>\r\n\t\t\t\t<h2>{t('characters.title')}</h2>\r\n\t\t\t\t\r\n\t\t\t\t<form onSubmit={null}>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\t{t('characters.name-query')}\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvalue={this.state.value}\r\n\t\t\t\t\t\t\tonChange={this.handleCharacterSearch}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input type=\"submit\" value={t('common.load')} />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withTranslation('common')(Characters)\r\n","import axios from 'axios'\r\n\r\nconst client_id = 'e1d9b7f970f44229bda1942d09d3ce97'\r\nconst client_secret = '68t8Dc1UBHEX3oQC3nMLXKINoQ7Mz4Ik'\r\nconst BLIZZARD_ENDPOINT = 'https://eu.api.blizzard.com'\r\n\r\nasync function requestAuthToken() {\r\n  console.log('...Requesting Auth Token')\r\n\r\n  return await axios.post(\r\n    'https://us.battle.net/oauth/token',\r\n    {},\r\n    {\r\n      auth: {\r\n        username: `${client_id}`,\r\n        password: `${client_secret}`,\r\n      },\r\n      params: { grant_type: 'client_credentials' },\r\n    }\r\n  )\r\n}\r\n\r\nasync function getAuthToken() {\r\n  let token = localStorage.getItem('blizzard_token')\r\n  let token_expire_time = localStorage.getItem('blizzard_token_expire_time')\r\n\r\n  // Token is available in local storage\r\n  if (token !== null) {\r\n    // Check if expired\r\n    if (token_expire_time !== null) {\r\n      let isTokenExpired =\r\n        Math.floor(Date.now() / 1000) > token_expire_time - 900 // 15min before expire time\r\n      if (!isTokenExpired) {\r\n        // Token is not expired\r\n        //console.log('...found token : ' + token)\r\n        return token\r\n      }\r\n    }\r\n  }\r\n  // Request new token because no one is available or up to date\r\n  return await requestAuthToken().then(\r\n    (result) => {\r\n      // Check HTTP status code (200)\r\n      token = result.data.access_token\r\n\r\n      let new_expire_date =\r\n        Math.floor(Date.now() / 1000) + result.data.expires_in\r\n\r\n      console.log('... Putting in local storage blizzard_token : ' + token)\r\n      localStorage.setItem('blizzard_token', result.data.access_token)\r\n\r\n      console.log(\r\n        '... Putting in local storage blizzard_token_expire_time : ' +\r\n          new_expire_date\r\n      )\r\n      localStorage.setItem('blizzard_token_expire_time', new_expire_date)\r\n\r\n      return result.data.access_token\r\n    },\r\n    (error) => {\r\n      console.log('Blizzard API - error while fetching access token :' + error)\r\n      return null\r\n    }\r\n  )\r\n}\r\n\r\nexport async function client(endpoint, { body, ...customConfig } = {}) {\r\n  const token = await getAuthToken()\r\n  const headers = { 'Content-Type': 'application/json' }\r\n\r\n  const config = {\r\n    method: body ? 'POST' : 'GET',\r\n    ...customConfig,\r\n    headers: {\r\n      ...headers,\r\n      ...customConfig.headers,\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    validateStatus: function (status) {\r\n      return status === 200\r\n    },\r\n  }\r\n\r\n  if (body) {\r\n    config.body = JSON.stringify(body)\r\n  }\r\n  return axios(endpoint, { ...config }).then(\r\n    (result) => {\r\n      return result\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error.message)\r\n    }\r\n  )\r\n}\r\n\r\n// Returns mounts index list (eu, static-eu, fr_FR)\r\nclient.getMountIndex = async function (region, namespace, locale) {\r\n  return await client(BLIZZARD_ENDPOINT + '/data/wow/mount/index', {\r\n    params: {\r\n      region: `${region}`,\r\n      namespace: `${namespace}`,\r\n      locale: `${locale}`,\r\n    },\r\n  })\r\n}\r\n\r\nclient.getMountById = async function (mountid, region, namespace, locale) {\r\n  return await client(BLIZZARD_ENDPOINT + `/data/wow/mount/${mountid}`, {\r\n    params: {\r\n      region: `${region}`,\r\n      namespace: `${namespace}`,\r\n      locale: `${locale}`,\r\n    },\r\n  })\r\n}\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { client } from '../../api/BlizzardAPI'\r\n\r\nconst initialState = {\r\n  data: [],\r\n  searchText: '',\r\n  status: 'idle',\r\n  error: null,\r\n  selectedMount: null,\r\n  selectedMountAsset: '',\r\n  selectedMountStatus: 'idle',\r\n  selectedMountError: null,\r\n}\r\n\r\n// Async thunk to fetch mounts list\r\nexport const fetchMounts = createAsyncThunk('mounts/fetchMounts', async () => {\r\n  const response = await client.getMountIndex('eu', 'static-eu', 'fr_FR')\r\n  return response.data.mounts\r\n})\r\n\r\n// Async thunk to fetch mount data by its id\r\nexport const fetchMountById = createAsyncThunk(\r\n  'mounts/fetchMountById',\r\n  async (mountId) => {\r\n    const response = await client.getMountById(\r\n      mountId,\r\n      'eu',\r\n      'static-eu',\r\n      'fr_FR'\r\n    )\r\n    return response.data\r\n  }\r\n)\r\n\r\n// Async thunk to fetch asset by mount object (received by fetchMountById())\r\nexport const fetchMountAsset = createAsyncThunk(\r\n  'mounts/fetchMountAsset',\r\n  async (mount) => {\r\n    if (mount) {\r\n      const response = await client(mount.creature_displays['0'].key.href)\r\n      return response.data\r\n    } else\r\n      return Promise.reject('Need a mount object in order to fetch its asset')\r\n  }\r\n)\r\n\r\nconst MountsSlice = createSlice({\r\n  name: 'mounts',\r\n  initialState,\r\n  reducers: {\r\n    newMountClicked(state) {\r\n      state.selectedMount = null\r\n      state.selectedMountAsset = ''\r\n      state.selectedMountStatus = 'idle'\r\n      state.selectedMountError = null\r\n    },\r\n    mountSearched(state, action) {\r\n      state.searchText = action.payload\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchMounts.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [fetchMounts.fulfilled]: (state, action) => {\r\n      state.status = 'succeeded'\r\n      state.data = state.data.concat(action.payload)\r\n    },\r\n    [fetchMounts.rejected]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n    [fetchMountById.pending]: (state) => {\r\n      state.selectedMountStatus = 'loading'\r\n    },\r\n    [fetchMountById.fulfilled]: (state, action) => {\r\n      state.selectedMountStatus = 'succeeded'\r\n      state.selectedMount = action.payload\r\n    },\r\n    [fetchMountById.rejected]: (state, action) => {\r\n      state.selectedMountStatus = 'failed'\r\n      state.selectedMountError = action.payload\r\n    },\r\n    [fetchMountAsset.fulfilled]: (state, action) => {\r\n      state.selectedMountAsset = action.payload.assets['0'].value\r\n    },\r\n  },\r\n})\r\n\r\nexport const { newMountClicked, mountSearched } = MountsSlice.actions\r\n\r\nexport default MountsSlice.reducer\r\n\r\nexport const selectAllMounts = (state) => state.mounts.data\r\n\r\nexport const selectMountById = (state, mountId) =>\r\n  state.mounts.data.find((mount) => mount.id === mountId)\r\n","import React, { useState } from 'react'\r\n\r\nfunction SearchBar({ onChangeCallback }) {\r\n  const [query, setQuery] = useState('')\r\n\r\n  const handleChange = (e) => {\r\n    setQuery(e.target.value)\r\n    if (onChangeCallback) onChangeCallback(e.target.value.toLowerCase())\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <form>\r\n        <input type=\"text\" value={query} onChange={handleChange} />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { Link } from 'react-router-dom'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nimport { fetchMounts, mountSearched } from './MountsSlice' // Actions\r\n//import { selectAllMounts } from './MountsSlice' // Selectors\r\n\r\nimport './MountsList.css'\r\nimport SearchBar from '../../components/SearchBar/SearchBar'\r\n\r\nfunction MountsList() {\r\n  const dispatch = useDispatch()\r\n  const { t } = useTranslation('common')\r\n\r\n  const mounts = useSelector((state) =>\r\n    state.mounts.data.filter((mount) =>\r\n      mount.name.toLowerCase().includes(state.mounts.searchText)\r\n    )\r\n  )\r\n  const status = useSelector((state) => state.mounts.status)\r\n\r\n  const handleSearch = (query) => {\r\n    dispatch(mountSearched(query))\r\n  }\r\n\r\n  // Fetching mounts list\r\n  useEffect(() => {\r\n    if (status === 'idle') dispatch(fetchMounts())\r\n  }, [status, dispatch])\r\n\r\n  let renderedList\r\n\r\n  if (status === 'loading') {\r\n    renderedList = (\r\n      <div className=\"center-div\">\r\n        <Spinner animation=\"border\" role=\"status\" size=\"sm\" />\r\n        <span>{t('common.loading')} ...</span>\r\n      </div>\r\n    )\r\n  } else if (status === 'succeeded') {\r\n    const orderedMounts = mounts.slice().sort((a, b) => {\r\n      return a.name.localeCompare(b.name)\r\n    })\r\n\r\n    renderedList = orderedMounts.map((mount) => (\r\n      <Link key={mount.id} className=\"nav-list-row\" to={`/mounts/${mount.id}`}>\r\n        {mount.name}\r\n      </Link>\r\n    ))\r\n  } else if (status === 'failed') {\r\n    renderedList = <div>Couldn't load mounts</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-4 col-sm-4\">\r\n      <SearchBar onChangeCallback={handleSearch} />\r\n      <div className=\"nav-list\">{renderedList}</div>\r\n    </div>\r\n  )\r\n}\r\nexport default MountsList\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchMountById, fetchMountAsset, newMountClicked } from './MountsSlice' // Actions\r\n//import { selectMountById } from './MountsSlice' // Selectors\r\n\r\nimport './MountViewer.css'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nfunction MountViewer({ match }) {\r\n  const { mountId } = match.params\r\n\r\n  const dispatch = useDispatch()\r\n  const { t } = useTranslation('common')\r\n\r\n  const mount = useSelector((state) => state.mounts.selectedMount)\r\n  const mountStatus = useSelector((state) => state.mounts.selectedMountStatus)\r\n  const mountAsset = useSelector((state) => state.mounts.selectedMountAsset)\r\n\r\n  // When mountId (prop passed by router) changes : dispatch newMountClicked\r\n  useEffect(() => {\r\n    if (mountStatus !== 'idle') {\r\n      dispatch(newMountClicked())\r\n    }\r\n  }, [mountId, dispatch])\r\n\r\n  // If mount info hasn't been fetched, fetch it\r\n  useEffect(() => {\r\n    if (mountStatus === 'idle') {\r\n      dispatch(fetchMountById(mountId))\r\n    }\r\n  }, [mountStatus, dispatch])\r\n\r\n  // When selected mount exists : fetch mount asset\r\n  useEffect(() => {\r\n    if (mount) {\r\n      dispatch(fetchMountAsset(mount))\r\n    }\r\n  }, [mount, dispatch])\r\n\r\n  let renderedMount\r\n\r\n  if (mountStatus === 'loading') {\r\n    renderedMount = (\r\n      <div className=\"center-div\">\r\n        <Spinner animation=\"border\" role=\"status\" size=\"sm\" />\r\n        <span>{t('common.loading')} ...</span>\r\n      </div>\r\n    )\r\n  } else if (mountStatus === 'succeeded') {\r\n    renderedMount = (\r\n      <div>\r\n        <div className=\"mount-name\">{mount.name}</div>\r\n        <div className=\"mount-desc\">{mount.description}</div>\r\n        <img src={mountAsset} alt={mount.name} />\r\n      </div>\r\n    )\r\n  } else if (mountStatus === 'failed') {\r\n    renderedMount = <div>The mount id {mountId} does not exist.</div>\r\n  }\r\n\r\n  return <div className=\"mount-viewer col-8 col-sm-8\">{renderedMount}</div>\r\n}\r\nexport default MountViewer\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport MountsList from './MountsList'\r\nimport MountViewer from './MountViewer'\r\nimport './Mounts.css'\r\n\r\nfunction Mounts() {\r\n  const { t } = useTranslation('common')\r\n\r\n  return (\r\n    <div className=\"Mounts\">\r\n      <h2>{t('mounts.title')}</h2>\r\n      <div className=\"mounts-nav-container\">\r\n        <MountsList />\r\n        <Route path=\"/mounts/:mountId\" component={MountViewer} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Mounts\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n//import './Pets.css'\r\n\r\nfunction Pets() {\r\n\tconst { t } = useTranslation('common')\r\n\r\n\treturn (\r\n\t\t<div className=\"Pets\">\r\n\t\t\t\t\t\t<h1>Work in progress - not working</h1>\r\n\r\n\t\t\t<h2>{t('pets.title')}</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Pets\r\n","import React, { useState } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { Link } from 'react-router-dom'\r\nimport favicon from '../../assets/favicon.svg'\r\n\r\n//import './Nav.css'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nfunction Navigation() {\r\n  const [lang, setLang] = useState('en')\r\n  const { t, i18n } = useTranslation('common')\r\n\r\n  const handleLangChange = () => {\r\n    let newLang = getNextLang(lang)\r\n    i18n.changeLanguage(newLang)\r\n    setLang(newLang)\r\n  }\r\n\r\n  const getNextLang = (lang) => {\r\n    if (lang) return lang === 'en' ? 'fr' : 'en'\r\n    else return ''\r\n  }\r\n\r\n  return (\r\n    <Navbar\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      expand=\"sm\"\r\n      className=\"nav-container section\"\r\n    >\r\n      <Navbar.Brand>\r\n        <img src={favicon} alt=\"logo\" />\r\n        <span>World&nbsp;of&nbsp;Warcraft&nbsp;Wiki</span>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <Nav className=\"justify-content-end\">\r\n          <Link className=\"nav-link\" to=\"/mounts\">\r\n            {t('mounts.title')}\r\n          </Link>\r\n          <Link className=\"nav-link\" to=\"/characters\">\r\n            {t('characters.title')}\r\n          </Link>\r\n          <Link className=\"nav-link\" to=\"/pets\">\r\n            {t('pets.title')}\r\n          </Link>\r\n\r\n          <Button onClick={handleLangChange}>{getNextLang(lang)}</Button>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nfunction Footer() {\r\n  const { t } = useTranslation('common')\r\n  return (\r\n    <footer className=\"py-1 bg-dark text-white\" style={{ fontSize: '7pt' }}>\r\n      {t('footer.copyright')}\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\n\n// Pages\nimport Characters from './pages/characters/Characters'\nimport Mounts from './pages/mounts/Mounts'\nimport Pets from './pages/pets/Pets'\n\n// Components\nimport Navigation from './components/Nav/Navigation'\nimport Footer from './components/Footer/Footer'\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Navigation />\n        <div className=\"app-body\">\n          <Switch>\n            <Route exact path=\"/\" component={Mounts} />\n            <Route path=\"/characters\" component={Characters} />\n            <Route path=\"/mounts\" component={Mounts} />\n            <Route path=\"/pets\" component={Pets} />\n          </Switch>\n        </div>\n      </Router>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport mountsReducers from './pages/mounts/MountsSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    mounts: mountsReducers,\r\n  },\r\n})\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { I18nextProvider } from 'react-i18next'\nimport i18next from 'i18next'\nimport common_en from './translations/en/common.json'\nimport common_fr from './translations/fr/common.json'\n\ni18next.init({\n  interpolation: { escapeValue: false },\n  lng: 'en', // language to use\n  resources: {\n    en: {\n      common: common_en,\n    },\n    fr: {\n      common: common_fr,\n    },\n  },\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <I18nextProvider i18n={i18next}>\n      <App />\n    </I18nextProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n","module.exports = __webpack_public_path__ + \"static/media/favicon.158b0ed2.svg\";"],"sourceRoot":""}