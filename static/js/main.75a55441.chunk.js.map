{"version":3,"sources":["pages/characters/Characters.js","api/BlizzardAPI.js","pages/mounts/MountsSlice.js","components/LoadingSpinner/LoadingSpinner.js","pages/mounts/MountsList.js","pages/mounts/MountViewer.js","pages/mounts/Mounts.js","pages/pets/Pets.js","components/Nav/Nav.js","components/Footer/Footer.js","App.js","store.js","index.js"],"names":["Characters","props","state","value","handleCharacterSearch","bind","event","target","formatValue","length","substr","toUpperCase","toLowerCase","this","setState","t","className","onSubmit","type","onChange","Component","withTranslation","client_id","requestAuthToken","a","console","log","axios","post","auth","username","password","params","grant_type","getAuthToken","token","localStorage","getItem","token_expire_time","Math","floor","Date","now","then","result","data","access_token","new_expire_date","expires_in","setItem","error","client","endpoint","body","customConfig","headers","config","method","Authorization","validateStatus","status","JSON","stringify","Promise","reject","message","getMountIndex","region","namespace","locale","BLIZZARD_ENDPOINT","getMountById","mountid","fetchMounts","createAsyncThunk","response","mounts","fetchMountById","mountId","dispatch","MountsSlice","mount","creature_displays","key","href","createSlice","name","initialState","selectedMountId","selectedMountStatus","selectedMountError","reducers","mountSelected","action","payload","extraReducers","pending","fulfilled","concat","rejected","selectedMount","actions","LoadingSpinner","useTranslation","color","height","width","MountListItem","id","onClickItem","onClick","MountsList","renderedList","useDispatch","useSelector","useEffect","slice","sort","b","localeCompare","map","MountViewer","renderedMount","description","src","alt","Mounts","Pets","Nav","handleBurgerOpen","prevState","burgerOpen","handleLangChange","i18n","prevLang","lang","newLang","getNextLang","changeLanguage","nextLang","isOpen","to","Footer","App","exact","path","component","configureStore","reducer","mountsReducers","i18next","init","interpolation","escapeValue","lng","resources","en","common","common_en","fr","common_fr","ReactDOM","render","store","I18nextProvider","document","getElementById"],"mappings":"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","file":"static/js/main.75a55441.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { withTranslation } from 'react-i18next'\r\n//import './Characters.css'\r\n\r\nclass Characters extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = { value: '' }\r\n\t\tthis.handleCharacterSearch = this.handleCharacterSearch.bind(this)\r\n\t}\r\n\r\n\thandleCharacterSearch(event) {\r\n\t\tlet value = event.target.value\r\n\t\tlet formatValue =\r\n\t\t\tvalue.length >= 1\r\n\t\t\t\t? value.substr(0, 1).toUpperCase() +\r\n\t\t\t\t  value.substr(1, value.length).toLowerCase() // first letter to uppercase, rest of letters to lowercase\r\n\t\t\t\t: value\r\n\t\tthis.setState({ value: formatValue })\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { t } = this.props\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"Characters\">\r\n\t\t\t\t<h2>{t('characters.title')}</h2>\r\n\t\t\t\t<form onSubmit={null}>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\t{t('characters.name-query')}\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvalue={this.state.value}\r\n\t\t\t\t\t\t\tonChange={this.handleCharacterSearch}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input type=\"submit\" value={t('common.load')} />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withTranslation('common')(Characters)\r\n","import axios from 'axios'\r\n\r\nconst client_id = 'e1d9b7f970f44229bda1942d09d3ce97'\r\nconst client_secret = '68t8Dc1UBHEX3oQC3nMLXKINoQ7Mz4Ik'\r\nconst BLIZZARD_ENDPOINT = 'https://eu.api.blizzard.com'\r\n\r\nasync function requestAuthToken() {\r\n  console.log('...Requesting Auth Token')\r\n\r\n  return await axios.post(\r\n    'https://us.battle.net/oauth/token',\r\n    {},\r\n    {\r\n      auth: {\r\n        username: `${client_id}`,\r\n        password: `${client_secret}`,\r\n      },\r\n      params: { grant_type: 'client_credentials' },\r\n    }\r\n  )\r\n}\r\n\r\nasync function getAuthToken() {\r\n  let token = localStorage.getItem('blizzard_token')\r\n  let token_expire_time = localStorage.getItem('blizzard_token_expire_time')\r\n\r\n  // Token is available in local storage\r\n  if (token !== null) {\r\n    // Check if expired\r\n    if (token_expire_time !== null) {\r\n      let isTokenExpired =\r\n        Math.floor(Date.now() / 1000) > token_expire_time - 900 // 15min before expire time\r\n      if (!isTokenExpired) {\r\n        // Token is not expired\r\n        console.log('...found token : ' + token)\r\n        return token\r\n      }\r\n    }\r\n  }\r\n  // Request new token because no one is available or up to date\r\n  return await requestAuthToken().then(\r\n    (result) => {\r\n      // Check HTTP status code (200)\r\n      token = result.data.access_token\r\n\r\n      let new_expire_date =\r\n        Math.floor(Date.now() / 1000) + result.data.expires_in\r\n\r\n      console.log(result)\r\n      console.log('... Putting in local storage blizzard_token : ' + token)\r\n      localStorage.setItem('blizzard_token', result.data.access_token)\r\n\r\n      console.log(\r\n        '... Putting in local storage blizzard_token_expire_time : ' +\r\n          new_expire_date\r\n      )\r\n      localStorage.setItem('blizzard_token_expire_time', new_expire_date)\r\n\r\n      return result.data.access_token\r\n    },\r\n    (error) => {\r\n      console.log('Blizzard API - error while fetching access token :' + error)\r\n      return null\r\n    }\r\n  )\r\n}\r\n\r\nexport async function client(endpoint, { body, ...customConfig } = {}) {\r\n  const token = await getAuthToken()\r\n  const headers = { 'Content-Type': 'application/json' }\r\n\r\n  const config = {\r\n    method: body ? 'POST' : 'GET',\r\n    ...customConfig,\r\n    headers: {\r\n      ...headers,\r\n      ...customConfig.headers,\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    validateStatus: function (status) {\r\n      return status == 200\r\n    },\r\n  }\r\n\r\n  if (body) {\r\n    config.body = JSON.stringify(body)\r\n  }\r\n  return axios(endpoint, { ...config }).then(\r\n    (result) => {\r\n      return result\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error.message)\r\n    }\r\n  )\r\n}\r\n\r\n// Returns mounts index list (eu, static-eu, fr_FR)\r\nclient.getMountIndex = async function (region, namespace, locale) {\r\n  return await client(BLIZZARD_ENDPOINT + '/data/wow/mount/index', {\r\n    params: {\r\n      region: `${region}`,\r\n      namespace: `${namespace}`,\r\n      locale: `${locale}`,\r\n    },\r\n  })\r\n}\r\n\r\nclient.getMountById = async function (mountid, region, namespace, locale) {\r\n  return await client(BLIZZARD_ENDPOINT + `/data/wow/mount/${mountid}`, {\r\n    params: {\r\n      region: `${region}`,\r\n      namespace: `${namespace}`,\r\n      locale: `${locale}`,\r\n    },\r\n  })\r\n}\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { client } from '../../api/BlizzardAPI'\r\n\r\nconst initialState = {\r\n  data: [],\r\n  status: 'idle',\r\n  error: 'null',\r\n  selectedMountId: null,\r\n  selectedMountStatus: 'idle',\r\n  selectedMountError: 'null',\r\n}\r\n\r\n// Async thunk to fetch mounts list\r\nexport const fetchMounts = createAsyncThunk('mounts/fetchMounts', async () => {\r\n  const response = await client.getMountIndex('eu', 'static-eu', 'fr_FR')\r\n  return response.data.mounts\r\n})\r\n\r\n// Async thunk to fetch mount data by its id\r\nexport const fetchMountById = createAsyncThunk(\r\n  'mounts/fetchMountById',\r\n  async (mountId, dispatch) => {\r\n    const response = await client.getMountById(\r\n      mountId,\r\n      'eu',\r\n      'static-eu',\r\n      'fr_FR'\r\n    )\r\n    return response.data\r\n  }\r\n)\r\n\r\n// Async thunk to fetch asset its id\r\nexport const fetchMountAsset = createAsyncThunk(\r\n  'mounts/fetchMountAsset',\r\n  async (mount) => {\r\n    if (mount) {\r\n      const response = await client(mount.creature_displays['0'].key.href)\r\n      return response.data\r\n    } else\r\n      return Promise.reject('Need a mount object in order to fetch its asset')\r\n  }\r\n)\r\n\r\nconst MountsSlice = createSlice({\r\n  name: 'mounts',\r\n  initialState,\r\n  reducers: {\r\n    mountSelected(state, action) {\r\n      state.selectedMountId = action.payload\r\n      state.selectedMountStatus = 'idle'\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchMounts.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [fetchMounts.fulfilled]: (state, action) => {\r\n      state.status = 'succeeded'\r\n      state.data = state.data.concat(action.payload)\r\n    },\r\n    [fetchMounts.rejected]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n    [fetchMountById.pending]: (state) => {\r\n      state.selectedMountStatus = 'loading'\r\n    },\r\n    [fetchMountById.fulfilled]: (state, action) => {\r\n      state.selectedMountStatus = 'succeeded'\r\n      state.selectedMount = action.payload\r\n    },\r\n    [fetchMountById.rejected]: (state, action) => {\r\n      state.selectedMountStatus = 'failed'\r\n      state.selectedMountError = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const { mountSelected } = MountsSlice.actions\r\n\r\nexport default MountsSlice.reducer\r\n\r\nexport const selectAllMounts = (state) => state.mounts.data\r\n\r\nexport const selectMountById = (state, mountId) =>\r\n  state.mounts.data.find((mount) => mount.id === mountId)\r\n","import React from 'react'\r\nimport Loader from 'react-loader-spinner'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst LoadingSpinner = () => {\r\n  const { t } = useTranslation('common')\r\n  return (\r\n    <div>\r\n      <span>{t('common.loading')} </span>\r\n      <Loader\r\n        className=\"loader\"\r\n        type=\"Oval\"\r\n        color=\"#00BFFF\"\r\n        height={15}\r\n        width={15}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadingSpinner\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport { mountSelected, fetchMounts } from './MountsSlice' // Actions\r\nimport { selectAllMounts } from './MountsSlice' // Selectors\r\n\r\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner'\r\nimport './MountsList.css'\r\n\r\nconst MountListItem = ({ name, id, onClickItem }) => {\r\n  return (\r\n    <div className=\"nav-list-row\" onClick={() => onClickItem(name, id)}>\r\n      {name}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction MountsList() {\r\n  const dispatch = useDispatch()\r\n  const { t } = useTranslation('common')\r\n\r\n  const mounts = useSelector((state) => state.mounts.data)\r\n  const status = useSelector((state) => state.mounts.status)\r\n\r\n  // Fetching mounts list\r\n  useEffect(() => {\r\n    if (status === 'idle') dispatch(fetchMounts())\r\n  }, [status, dispatch])\r\n\r\n  let renderedList\r\n\r\n  if (status === 'loading') {\r\n    renderedList = <LoadingSpinner />\r\n  } else if (status === 'succeeded') {\r\n    const orderedMounts = mounts.slice().sort((a, b) => {\r\n      a.name.localeCompare(b.name)\r\n    })\r\n\r\n    renderedList = orderedMounts.map((mount) => (\r\n      <MountListItem\r\n        name={mount.name}\r\n        id={mount.id}\r\n        onClickItem={() => {\r\n          dispatch(mountSelected(mount.id))\r\n        }}\r\n        key={mount.id}\r\n      />\r\n    ))\r\n  } else if (status === 'failed') {\r\n    renderedList = <div>Couldn't load mounts</div>\r\n  }\r\n\r\n  return <div className=\"nav-list\">{renderedList}</div>\r\n}\r\nexport default MountsList\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchMountById, fetchMountAsset } from './MountsSlice' // Actions\r\nimport { selectMountById } from './MountsSlice' // Selectors\r\n\r\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner'\r\nimport './MountViewer.css'\r\n\r\nexport function MountViewer() {\r\n  const dispatch = useDispatch()\r\n\r\n  const selectedMount = useSelector((state) => state.mounts.selectedMount)\r\n  const selectedMountId = useSelector((state) => state.mounts.selectedMountId)\r\n  const selectedMountStatus = useSelector(\r\n    (state) => state.mounts.selectedMountStatus\r\n  )\r\n\r\n  // If selected mount id changed : fetch selected mount info\r\n  useEffect(() => {\r\n    if (selectedMountStatus === 'idle' && selectedMountId) {\r\n      dispatch(fetchMountById(selectedMountId))\r\n    }\r\n  }, [selectedMountId, dispatch])\r\n\r\n  let renderedMount\r\n\r\n  if (selectedMountStatus === 'loading') {\r\n    renderedMount = <LoadingSpinner />\r\n  } else if (selectedMountStatus === 'succeeded') {\r\n    renderedMount = (\r\n      <div>\r\n        <div className=\"mount-name\">{selectedMount.name}</div>\r\n        <div className=\"mount-desc\">{selectedMount.description}</div>\r\n        <img src={''} alt={selectedMount.name} />\r\n      </div>\r\n    )\r\n  } else if (selectedMountStatus === 'failed') {\r\n    renderedMount = <div>Couldn't load mount</div>\r\n  }\r\n\r\n  return <div className=\"mount-viewer\">{renderedMount}</div>\r\n}\r\nexport default MountViewer\r\n\r\n/*async fetchMount() {\r\n\r\n\r\n    //let blizzardAPI = new BlizzardAPI()\r\n    await blizzardAPI\r\n      .getMountById(this.props.mountid, 'eu', 'static-eu', 'fr_FR')\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            loading: false,\r\n            mount: result.data,\r\n          })\r\n        },\r\n        (error) => {\r\n          console.log('Erreur ComponentDidUpdate pendant getMountById' + error)\r\n          this.setState({ error: true })\r\n        }\r\n      )\r\n\r\n    await blizzardAPI\r\n      .get(this.state.mount.creature_displays['0'].key.href)\r\n      .then((result) => {\r\n        this.setState({ asset: result.data.assets['0'].value })\r\n      })\r\n  }*/\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport MountsList from './MountsList'\r\nimport MountViewer from './MountViewer'\r\nimport './Mounts.css'\r\n\r\nexport const Mounts = () => {\r\n  const { t } = useTranslation('common')\r\n\r\n  return (\r\n    <div className=\"Mounts\">\r\n      <h2>{t('mounts.title')}</h2>\r\n      <div className=\"mounts-nav-container\">\r\n        <MountsList />\r\n        <div className=\"spacer\" />\r\n        <MountViewer />\r\n        <div className=\"spacer\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Mounts\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n//import './Pets.css'\r\n\r\nfunction Pets() {\r\n\tconst { t } = useTranslation('common')\r\n\r\n\treturn (\r\n\t\t<div className=\"Pets\">\r\n\t\t\t<h2>{t('pets.title')}</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Pets\r\n","import React, { Component } from 'react'\r\nimport Burger from '@animated-burgers/burger-squeeze'\r\nimport { withTranslation } from 'react-i18next'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './Nav.css'\r\nimport '@animated-burgers/burger-squeeze/dist/styles.css'\r\n\r\nclass Nav extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = { burgerOpen: false, lang: 'en' }\r\n\t}\r\n\r\n\thandleBurgerOpen = () => {\r\n\t\tthis.setState((prevState) => {\r\n\t\t\treturn { burgerOpen: !prevState.burgerOpen }\r\n\t\t})\r\n\t}\r\n\r\n\thandleLangChange = () => {\r\n\t\tconst { i18n } = this.props\r\n\r\n\t\tthis.setState((prevState) => {\r\n\t\t\tlet prevLang = prevState.lang\r\n\t\t\tlet newLang = this.getNextLang(prevLang)\r\n\t\t\ti18n.changeLanguage(newLang)\r\n\t\t\treturn { lang: newLang }\r\n\t\t})\r\n\t}\r\n\r\n\tgetNextLang(lang) {\r\n\t\treturn lang === 'en' ? 'fr' : 'en'\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { t } = this.props\r\n\t\tconst { burgerOpen, lang } = this.state\r\n\t\tlet nextLang = this.getNextLang(lang)\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"nav-container\">\r\n\t\t\t\t<div className=\"nav\">\r\n\t\t\t\t\t<Burger isOpen={burgerOpen} onClick={this.handleBurgerOpen} />\r\n\t\t\t\t\t<div className=\"nav-logo\">\r\n\t\t\t\t\t\t<img src=\"favicon.svg\" alt=\"logo\" />\r\n\t\t\t\t\t\t<h3>World&nbsp;of&nbsp;Warcraft&nbsp;Wiki</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"spacer\" />\r\n\t\t\t\t\t<div className=\"nav-links\">\r\n\t\t\t\t\t\t<Link to=\"/characters\">{t('characters.title')}</Link>\r\n\r\n\t\t\t\t\t\t<Link to=\"/mounts\">{t('mounts.title')}</Link>\r\n\r\n\t\t\t\t\t\t<Link to=\"/pets\">{t('pets.title')}</Link>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"nav-lang\">\r\n\t\t\t\t\t\t<button onClick={this.handleLangChange}>{nextLang}</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withTranslation('common')(Nav)\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport './Footer.css'\r\n\r\nfunction Footer() {\r\n\tconst { t } = useTranslation('common')\r\n\treturn <div className=\"footer\">{t('footer.copyright')}</div>\r\n}\r\n\r\nexport default Footer\r\n","import React, { useEffect, useState } from 'react'\n\n// Pages\nimport Characters from './pages/characters/Characters'\nimport Mounts from './pages/mounts/Mounts'\nimport Pets from './pages/pets/Pets'\n\n// Components\nimport Nav from './components/Nav/Nav'\nimport Footer from './components/Footer/Footer'\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Nav />\n        <div className=\"app-body\">\n          <Switch>\n            <Route exact path=\"/\" component={Characters} />\n            <Route path=\"/characters\" component={Characters} />\n            <Route path=\"/mounts\" component={Mounts} />\n            <Route path=\"/pets\" component={Pets} />\n          </Switch>\n        </div>\n      </Router>\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport mountsReducers from './pages/mounts/MountsSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    mounts: mountsReducers,\r\n  },\r\n})\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { I18nextProvider } from 'react-i18next'\nimport i18next from 'i18next'\nimport common_en from './translations/en/common.json'\nimport common_fr from './translations/fr/common.json'\n\ni18next.init({\n  interpolation: { escapeValue: false },\n  lng: 'en', // language to use\n  resources: {\n    en: {\n      common: common_en,\n    },\n    fr: {\n      common: common_fr,\n    },\n  },\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <I18nextProvider i18n={i18next}>\n      <App />\n    </I18nextProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}